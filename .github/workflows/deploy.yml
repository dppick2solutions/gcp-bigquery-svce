name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    environment: main
    permissions: 
        id-token: write
        contents: read  
        issues: write

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: Azure/login@v1.5.0
        with:
          client-id: ${{ vars.ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Plan Terraform changes
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_org_id: ${{ vars.GCP_ORG_ID }}
          TF_VAR_billing_id: ${{ vars.BILLING_ID }}
          TF_VAR_sql_server_name: ${{ vars.SQL_SERVER_NAME }}
          TF_VAR_sql_admin_username: ${{ vars.SQL_ADMIN_USERNAME }}
          TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}
          TF_VAR_gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_azure_client_id: ${{ vars.ARM_CLIENT_ID }}
          TF_VAR_azure_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          TF_VAR_azure_tenant_id: ${{ vars.ARM_TENANT_ID }}
          TF_VAR_allowed_ips: ${{ vars.ALLOWED_IPS }}

      - name: Approve Terraform Plan
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: dppick2solutions

      # Apply Terraform changes (only on push to main)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        env:
            TF_VAR_org_id: ${{ vars.GCP_ORG_ID }}
            TF_VAR_billing_id: ${{ vars.BILLING_ID }}
            TF_VAR_sql_server_name: ${{ vars.SQL_SERVER_NAME }}
            TF_VAR_sql_admin_username: ${{ vars.SQL_ADMIN_USERNAME }}
            TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}
            TF_VAR_gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
            TF_VAR_azure_client_id: ${{ vars.ARM_CLIENT_ID }}
            TF_VAR_azure_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
            TF_VAR_azure_tenant_id: ${{ vars.ARM_TENANT_ID }}
            TF_VAR_allowed_ips: ${{ vars.ALLOWED_IPS }}
  data_load:
    runs-on: ubuntu-latest
    environment: main
    needs: terraform
    permissions: 
        id-token: write
        contents: read  
        issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install -r data_load/requirements.txt
  
      - name: Run data load script
        env:
          AZURE_SQL_SERVER: ${{ vars.SQL_SERVER_NAME }}
          AZURE_SQL_DB: ${{ secrets.AZURE_SQL_DB }}
          AZURE_SQL_USER: ${{ secrets.AZURE_SQL_USER }}
          AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: python data_load/load_csv_to_azure.py
  